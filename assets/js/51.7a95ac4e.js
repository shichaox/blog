(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{484:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"redis在java项目中的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis在java项目中的使用"}},[t._v("#")]),t._v(" Redis在Java项目中的使用")]),t._v(" "),a("h2",{attrs:{id:"缓存问题分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存问题分析"}},[t._v("#")]),t._v(" 缓存问题分析")]),t._v(" "),a("h3",{attrs:{id:"缓存穿透"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透"}},[t._v("#")]),t._v(" 缓存穿透")]),t._v(" "),a("p",[t._v("指查询数据库中不存在的数据")]),t._v(" "),a("h3",{attrs:{id:"缓存雪崩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存雪崩"}},[t._v("#")]),t._v(" 缓存雪崩")]),t._v(" "),a("p",[t._v("指redis中具有过期时间的数据在同一时刻失效")]),t._v(" "),a("h3",{attrs:{id:"缓存击穿"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存击穿"}},[t._v("#")]),t._v(" 缓存击穿")]),t._v(" "),a("p",[t._v("大量请求同时去数据库查询某一个redis缓存中没有的key")]),t._v(" "),a("h2",{attrs:{id:"redis缓存击穿解决方案原理分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis缓存击穿解决方案原理分析"}},[t._v("#")]),t._v(" Redis缓存击穿解决方案原理分析")]),t._v(" "),a("h3",{attrs:{id:"为什么本地锁不行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么本地锁不行"}},[t._v("#")]),t._v(" 为什么本地锁不行")]),t._v(" "),a("h3",{attrs:{id:"分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[t._v("#")]),t._v(" 分布式锁")]),t._v(" "),a("ul",[a("li",[t._v("Redis")]),t._v(" "),a("li",[t._v("Zookeeper")])]),t._v(" "),a("h2",{attrs:{id:"分布式锁-aop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁-aop"}},[t._v("#")]),t._v(" 分布式锁+AOP")]),t._v(" "),a("h3",{attrs:{id:"自定义注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义注解"}},[t._v("#")]),t._v(" 自定义注解")]),t._v(" "),a("p",[t._v("元注解")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElementType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("METHOD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RetentionPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNTIME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("属性")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prefix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cache"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"定义切面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义切面"}},[t._v("#")]),t._v(" 定义切面")]),t._v(" "),a("ol",[a("li",[t._v("通过ProceedingJoinPoint对象获取Signature，然后通过Signatrue获取method对象，获取该方法的注解，然后根据注解中的prefix值构造redis的key")]),t._v(" "),a("li",[t._v("获取key值对应的Bucket代理对象，然后获取对应的redis的value")]),t._v(" "),a("li",[t._v("如果value不为空，就返回该value值")]),t._v(" "),a("li",[t._v("如果value值为空，就准备从数据库中查找")]),t._v(" "),a("li",[t._v("通过redissonClient.getLock获取锁")]),t._v(" "),a("li",[t._v("加锁，双重检查，重复3中的判断(放到try catch代码块中)")]),t._v(" "),a("li",[a("strong",[t._v("执行method方法")]),t._v("(通过ProceedingJointPoint的proceed方法)")]),t._v(" "),a("li",[t._v("判断查到的数据是否为null，为null就发生了缓存穿透，返回空的对象")]),t._v(" "),a("li",[t._v("不为null就将数据库中查到的数据放到redis中去")]),t._v(" "),a("li",[t._v("finally代码块中释放锁")]),t._v(" "),a("li",[t._v("返回数据库查到的数据对应的对象")])]),t._v(" "),a("h2",{attrs:{id:"布隆过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器"}},[t._v("#")]),t._v(" 布隆过滤器")]),t._v(" "),a("p",[t._v("使用")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据指定名称(key)获取布隆过滤器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RBloomFilter")]),t._v(" rbloomFilter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redissonClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBloomFilter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化布隆过滤器，预计统计元素数量为100000，期望误判率为0.01")]),t._v("\nrbloomFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向布隆过滤器中添加目标元素")]),t._v("\nrbloomFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("目标元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断目标元素是否存在，返回false表示不存在")]),t._v("\nboolen exists "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rbloomFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("目标元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);