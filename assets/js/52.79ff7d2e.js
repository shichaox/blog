(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{488:function(a,t,s){"use strict";s.r(t);var r=s(14),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"rocketmq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq"}},[a._v("#")]),a._v(" RocketMQ")]),a._v(" "),t("h2",{attrs:{id:"rocketmq是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq是什么"}},[a._v("#")]),a._v(" RocketMQ是什么")]),a._v(" "),t("p",[a._v("RocketMQ是阿里巴巴开源的一个消息中间件。")]),a._v(" "),t("p",[a._v("中间件：")]),a._v(" "),t("p",[a._v("消息中间件：")]),a._v(" "),t("h2",{attrs:{id:"功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[a._v("#")]),a._v(" 功能")]),a._v(" "),t("h3",{attrs:{id:"异步化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异步化"}},[a._v("#")]),a._v(" 异步化")]),a._v(" "),t("h3",{attrs:{id:"限流削峰"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#限流削峰"}},[a._v("#")]),a._v(" 限流削峰")]),a._v(" "),t("p",[a._v("以秒杀举例")]),a._v(" "),t("p",[a._v("如果一个服务器的瞬时请求量很大，就可能会导致服务器崩溃。")]),a._v(" "),t("p",[a._v("就好比一个商场举办抢购活动，同时有很多人来抢购，商场最多只能容纳1000人，但是来了5000人，商场没有能力同时容纳这么多人抢购，就可以让他们去排队，限制进入商场的人数，每次只处理一部分请求，每次只让队伍最前面的特定的人数进入商场。")]),a._v(" "),t("p",[a._v("因此我们可以引入"),t("strong",[a._v("消息队列")]),a._v("让这些请求排队，如果秒杀有数量限制的话，可以只处理消息队列中最前面这些数量的请求，后面的请求都返回失败的响应就可以了。")]),a._v(" "),t("h3",{attrs:{id:"和其他消息中间件对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#和其他消息中间件对比"}},[a._v("#")]),a._v(" 和其他消息中间件对比")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th"),a._v(" "),t("th",[a._v("RocketMQ")]),a._v(" "),t("th",[a._v("ActiveMQ")]),a._v(" "),t("th",[a._v("RabbitMQ")]),a._v(" "),t("th",[a._v("Kafka")])])]),a._v(" "),t("tbody",[t("tr",[t("td"),a._v(" "),t("td"),a._v(" "),t("td"),a._v(" "),t("td"),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td"),a._v(" "),t("td"),a._v(" "),t("td"),a._v(" "),t("td"),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td"),a._v(" "),t("td"),a._v(" "),t("td"),a._v(" "),t("td"),a._v(" "),t("td")])])]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("消息中间件")]),a._v(" "),t("th",[a._v("优点")]),a._v(" "),t("th",[a._v("不足")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("RocketMQ")]),a._v(" "),t("td",[a._v("经历过高并发实战")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ActiveMQ")]),a._v(" "),t("td"),a._v(" "),t("td",[a._v("开源社区不活跃")])]),a._v(" "),t("tr",[t("td",[a._v("RabbitMQ")]),a._v(" "),t("td"),a._v(" "),t("td",[a._v("开发语言小众，不利于自己基于源码开发扩展")])]),a._v(" "),t("tr",[t("td",[a._v("Kafka")]),a._v(" "),t("td"),a._v(" "),t("td")])])]),a._v(" "),t("h2",{attrs:{id:"模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模型"}},[a._v("#")]),a._v(" 模型")]),a._v(" "),t("h3",{attrs:{id:"概念模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念模型"}},[a._v("#")]),a._v(" 概念模型")]),a._v(" "),t("h3",{attrs:{id:"部署模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署模型"}},[a._v("#")]),a._v(" 部署模型")]),a._v(" "),t("h2",{attrs:{id:"rocketmq部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq部署"}},[a._v("#")]),a._v(" RocketMQ部署")]),a._v(" "),t("h4",{attrs:{id:"拉取镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拉取镜像"}},[a._v("#")]),a._v(" 拉取镜像")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull rocketmqinc/rocketmq\n")])])]),t("h4",{attrs:{id:"创建namesrv数据存储路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建namesrv数据存储路径"}},[a._v("#")]),a._v(" 创建namesrv数据存储路径")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v("  /docker/rocketmq/data/namesrv/logs   /docker/rocketmq/data/namesrv/store\n")])])]),t("h4",{attrs:{id:"运行nameserver容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行nameserver容器"}},[a._v("#")]),a._v(" 运行NameServer容器")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" rmqnamesrv "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9876")]),a._v(":9876 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /docker/rocketmq/data/namesrv/logs:/root/logs "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /docker/rocketmq/data/namesrv/store:/root/store "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MAX_POSSIBLE_HEAP=100000000"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\nrocketmqinc/rocketmq "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v(" mqnamesrv \n")])])]),t("h4",{attrs:{id:"创建broker数据存储路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建broker数据存储路径"}},[a._v("#")]),a._v(" 创建broker数据存储路径")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v("  /docker/rocketmq/data/broker/logs   /docker/rocketmq/data/broker/store /docker/rocketmq/conf\n")])])]),t("h4",{attrs:{id:"创建broker配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建broker配置文件"}},[a._v("#")]),a._v(" 创建broker配置文件")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /docker/rocketmq/conf/broker.conf\n")])])]),t("p",[a._v("文件内容")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 所属集群名称，如果节点较多可以配置多个")]),a._v("\nbrokerClusterName "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" DefaultCluster\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#broker名称，master和slave使用相同的名称，表明他们的主从关系")]),a._v("\nbrokerName "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" broker-a\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#0表示Master，大于0表示不同的slave")]),a._v("\nbrokerId "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#表示几点做消息删除动作，默认是凌晨4点")]),a._v("\ndeleteWhen "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 04\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#在磁盘上保留消息的时长，单位是小时")]),a._v("\nfileReservedTime "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("48")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#有三个值：SYNC_MASTER，ASYNC_MASTER，SLAVE；同步和异步表示Master和Slave之间同步数据的机制；")]),a._v("\nbrokerRole "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" ASYNC_MASTER\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#刷盘策略，取值为：ASYNC_FLUSH，SYNC_FLUSH表示同步刷盘和异步刷盘；SYNC_FLUSH消息写入磁盘后才返回成功状态，ASYNC_FLUSH不需要；")]),a._v("\nflushDiskType "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" ASYNC_FLUSH\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置broker节点所在服务器的ip地址")]),a._v("\nbrokerIP1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".140.134\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 磁盘使用达到95%之后,生产者再写入消息会报错 CODE: 14 DESC: service not available now, maybe disk full")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("diskMaxUsedSpaceRatio")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("95")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 定义延迟级别对应的延迟时间")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("messageDelayLevel")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h\n\n")])])]),t("h4",{attrs:{id:"运行broker容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行broker容器"}},[a._v("#")]),a._v(" 运行broker容器")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" rmqbroker "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--link")]),a._v(" rmqnamesrv:namesrv "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10911")]),a._v(":10911 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10909")]),a._v(":10909 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v("  /docker/rocketmq/data/broker/logs:/root/logs "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v("  /docker/rocketmq/data/broker/store:/root/store "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /docker/rocketmq/conf/broker.conf:/opt/rocketmq-4.4.0/conf/broker.conf "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"NAMESRV_ADDR=namesrv:9876"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MAX_POSSIBLE_HEAP=200000000"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\nrocketmqinc/rocketmq "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v(" mqbroker "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" /opt/rocketmq-4.4.0/conf/broker.conf \n")])])]),t("h2",{attrs:{id:"在java中使用rocketmq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在java中使用rocketmq"}},[a._v("#")]),a._v(" 在Java中使用RocketMQ")]),a._v(" "),t("h3",{attrs:{id:"生产者发送消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生产者发送消息"}},[a._v("#")]),a._v(" 生产者发送消息")]),a._v(" "),t("p",[a._v("① 创建一个生产者对象DefaultMQProducer(构造器要传入生产者组名)")]),a._v(" "),t("p",[a._v("② 给生产者对象设置nameserver的ip地址")]),a._v(" "),t("p",[a._v("③ 启动生产者(使用start方法)")]),a._v(" "),t("p",[a._v("④ 创建消息Message对象")]),a._v(" "),t("p",[a._v('⑤ 使用setTopic()给消息对象设置topic，使用setBody()设置消息内容(消息内容为byte[]类型，字符串消息需要使用字符串的getBytes(Charset.forName("utf-8"))获取)')]),a._v(" "),t("p",[a._v("⑥ 使用producer的send方法发送消息")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ")]),a._v("\n\n")])])]),t("h3",{attrs:{id:"消费者接收消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消费者接收消息"}},[a._v("#")]),a._v(" 消费者接收消息")]),a._v(" "),t("p",[a._v("① 创建一个消费者对象DefaultMQPushConsumer(需要指定消费者组名)")]),a._v(" "),t("p",[a._v("② 设置nameserver地址")]),a._v(" "),t("p",[a._v("③ 订阅主题(使用subscribe方法)")]),a._v(" "),t("p",[a._v("④ 设置消息监听器 (使用setMessageListener()，参数为匿名内部类对象，用于指定收到消息后如何处理消息)。")]),a._v(" "),t("p",[a._v("⑤ 实现监听器的匿名内部类对象的的方法")]),a._v(" "),t("p",[a._v("⑥ 启动consumer，使用consumer的start方法")]),a._v(" "),t("h3",{attrs:{id:"延迟消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#延迟消息"}},[a._v("#")]),a._v(" 延迟消息")]),a._v(" "),t("p",[a._v("只需要给生产者发送的消息对象设置延时就行了")]),a._v(" "),t("p",[a._v("设置的延时时间是延时的级别，不同的延时级别对应不同的延时时间。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("message"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setDelayTimeLevel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h3",{attrs:{id:"整合spring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整合spring"}},[a._v("#")]),a._v(" 整合spring")]),a._v(" "),t("h4",{attrs:{id:"整合生产者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整合生产者"}},[a._v("#")]),a._v(" 整合生产者")]),a._v(" "),t("p",[a._v("思路：")]),a._v(" "),t("p",[a._v("① 创建一个BaseProducer的类，并注册为spring的组件，用于封装消费者的操作")]),a._v(" "),t("p",[a._v("② 为BaseProducer类创建一个DefaultMQProducer类型的成员变量，producerGroup、nameServerAddr要作为成员变量，通过配置文件获取他们的值。")]),a._v(" "),t("p",[a._v("③ 在带有@PostConstruct注解的init()方法中"),t("strong",[a._v("执行生产者发送消息的前三步")]),a._v("，创建DefaultMQProducer对象并赋值给DefaultMQProducer类型的成员变量，(带有@PostConstruct注解方法会在项目启动的时候执行)")]),a._v(" "),t("p",[a._v("④ 创建一个方法用于发送普通消息，在方法中执行生产者发送消息的④-⑥步")]),a._v(" "),t("p",[a._v("​\t(1) 构造消息，发送消息")]),a._v(" "),t("p",[a._v("​\t(2) 判断消息发送状态")]),a._v(" "),t("p",[a._v("⑤ 创建一个方法用于发送延迟消息，在方法中执行生产者发送消息的④-⑥步")])])}),[],!1,null,null,null);t.default=e.exports}}]);