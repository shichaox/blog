(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{309:function(t,a,s){t.exports=s.p+"assets/img/image-20230818212852678.a70e3db1.png"},310:function(t,a,s){t.exports=s.p+"assets/img/image-20230818215105580.5f1e7a1c.png"},311:function(t,a,s){t.exports=s.p+"assets/img/image-20230818214631151.ae34bebc.png"},462:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据库索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库索引"}},[t._v("#")]),t._v(" 数据库索引")]),t._v(" "),a("h2",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),a("p",[t._v("索引是关系型数据库中对某一列或多个列的值进行排序的数据结构。通过索引可以快速访问数据库中的特定的信息，而不需要扫描整个数据库表。索引就像书籍中的目录，可以根据关键字快速定位到数据所在位置，从而加速查询操作。")]),t._v(" "),a("h2",{attrs:{id:"索引的优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引的优缺点"}},[t._v("#")]),t._v(" 索引的优缺点")]),t._v(" "),a("h3",{attrs:{id:"优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),a("ol",[a("li",[t._v("大大加快数据的查询速度。")]),t._v(" "),a("li",[t._v("加快表的连接速度。")])]),t._v(" "),a("h3",{attrs:{id:"缺点-索引对数据库的负面影响有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点-索引对数据库的负面影响有哪些"}},[t._v("#")]),t._v(" 缺点（索引对数据库的负面影响有哪些？）")]),t._v(" "),a("ol",[a("li",[t._v("创建索引和维护索引需要耗费时间，耗费的时间随着数据量的增加而增加。")]),t._v(" "),a("li",[t._v("索引需要占用物理空间。")]),t._v(" "),a("li",[t._v("对表进行增删改查的时候，索引也要动态维护，随着数据的变化，索引结构也会发生变化，维护成本变大，增删改查效率降低。")])]),t._v(" "),a("h2",{attrs:{id:"数据库中索引的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库中索引的分类"}},[t._v("#")]),t._v(" 数据库中索引的分类")]),t._v(" "),a("h3",{attrs:{id:"按功能划分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按功能划分"}},[t._v("#")]),t._v(" 按功能划分")]),t._v(" "),a("p",[t._v("(1) 主键索引")]),t._v(" "),a("p",[t._v("(2) 唯一性索引")]),t._v(" "),a("p",[t._v("(3) 全文索引")]),t._v(" "),a("p",[t._v("(4) 普通索引")]),t._v(" "),a("h3",{attrs:{id:"按物理划分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按物理划分"}},[t._v("#")]),t._v(" 按物理划分")]),t._v(" "),a("p",[t._v("(1) 聚集索引")]),t._v(" "),a("p",[t._v("(2) 非聚集索引")]),t._v(" "),a("h2",{attrs:{id:"数据结构为什么采用b-树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构为什么采用b-树"}},[t._v("#")]),t._v(" 数据结构为什么采用B+树？")]),t._v(" "),a("p",[t._v("B+树：自平衡搜索树")]),t._v(" "),a("p",[t._v("对于m阶B+树：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("每个节点最多有m个子树")])]),t._v(" "),a("li",[a("p",[t._v("根节点不是叶子结点时，最少有两颗子树")])]),t._v(" "),a("li",[a("p",[t._v("除了根结点之外的非终端结点子树最少有\n$$\n\\lceil m / 2 \\rceil\n$$")])]),t._v(" "),a("li"),t._v(" "),a("li",[a("p",[t._v("结点的关键字个数要求等于该结点对应子树个数要求 - 1 （非终端节点、非根节点为(m / 2)向上取整 - 1）")])]),t._v(" "),a("li",[a("p",[t._v("B树结点的结构举例")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("指针")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("关键字")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("指针")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("关键字")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("指针")])])]),t._v(" "),a("tbody")]),t._v(" "),a("p",[t._v("B+树与"),a("strong",[t._v("数组和链表")]),t._v("比较：")]),t._v(" "),a("p",[t._v("数组和链表要逐个比较所有数据，而B+树在每层只需要查找比较一个结点的数据。")]),t._v(" "),a("p",[t._v("B+树与"),a("strong",[t._v("二叉树")]),t._v("比较：")]),t._v(" "),a("p",[t._v("二叉树存储密度低，当数据量增大时，树的高度会升高，这样查询的次数就会变多，速度变慢；与二叉树相比，树的高度变低，磁盘IO次数减少，查询速度增高。")]),t._v(" "),a("p",[t._v("B+树与"),a("strong",[t._v("B树")]),t._v("比较：")]),t._v(" "),a("p",[t._v("(1) 与B树相比，B+树的所有非叶子结点只存储key，不存储data，会降低树的高度，进一步提高查询效率。")]),t._v(" "),a("p",[t._v("(2) 所有数据都存储在叶子结点，叶子结点之间维护了一个指针，方便了范围查找。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}}),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("数组")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("链表")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("有序数组")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("二叉树")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("B树")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("B+树")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("查找单个值")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度慢，因为要比较所有的数据")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度慢，因为要比较所有的数据")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度快，采用二分法")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度快")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度快，比二叉树高度降低了，查询的效率也变高了")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("方便")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("查找范围值")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度慢，因为要比较所有的数据")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度慢，因为要比较所有的数据")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度快，因为是有序的，可以先找到一个边界，然后顺着走。")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度慢，因为要在父节点和字节点之间反复跳转")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("需要在父子节点之间反复查找，不太方便")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("方便，因为所有的数据都存储在叶子结点，叶子结点之间维护了一个指针，指向下一个叶子结点，并且叶子结点之间是有序的")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("插入值")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度快")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度快")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度慢，因为插入一条数据，需要挪动数据。")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度快")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("速度快")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("方便")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("缺点")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("存储密度低，当数据量增大时，树的高度会升高，这样查询的次数就会变多，速度变慢")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}}),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),a("h2",{attrs:{id:"索引的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引的实现"}},[t._v("#")]),t._v(" 索引的实现")]),t._v(" "),a("p",[t._v("MySQL数据的存储和存储引擎息息相关，不同的存储引擎存储数据的方式是不一样的。")]),t._v(" "),a("p",[t._v("存储引擎：是将数据如何在磁盘中存储组织的技术，不同的技术（存储引擎）使用不同的存储机制，索引技巧、锁定级别等不同的功能和能力。")]),t._v(" "),a("p",[t._v("MySQL底层的存储引擎作为一个插件存在。")]),t._v(" "),a("p",[t._v("在MySQL中有很多存储引擎")]),t._v(" "),a("ul",[a("li",[t._v("InnoDB(5.1之后默认的存储引擎)")]),t._v(" "),a("li",[t._v("MyISAM(5.1之前默认的存储引擎)，由MySQL官方团队开发。")])]),t._v(" "),a("p",[t._v("InnoDB和MyISAM索引最大的的区别：MyISAM主键索引中，索引的数据部分是索引对应的数据的地址值，而InnoDB的主键索引中，索引的数据部分就是索引所在行的数据。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("区别")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("MyISAM")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("InnoDB")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储结构")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("frm、MYD、MYI")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("frm、ibd")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("事务")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不支持")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("支持")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("外键")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不支持")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("支持")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("锁")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("只支持表锁")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("支持表锁和行锁")])])])]),t._v(" "),a("h3",{attrs:{id:"myisam"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#myisam"}},[t._v("#")]),t._v(" MyISAM")]),t._v(" "),a("p",[t._v("MyISAM表有三个文件")]),t._v(" "),a("ul",[a("li",[a("p",[t._v(".frm(表结构定义文件)")]),t._v(" "),a("p",[t._v("定义表的结构，表里面有哪些列，列的类型")])]),t._v(" "),a("li",[a("p",[t._v(".MYD(数据文件)")]),t._v(" "),a("p",[t._v("存储表的数据")])]),t._v(" "),a("li",[a("p",[t._v(".MYI(索引文件)存储表的索引树")])])]),t._v(" "),a("h4",{attrs:{id:"myisam主键索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#myisam主键索引"}},[t._v("#")]),t._v(" MyISAM主键索引")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("key: 主键值")])]),t._v(" "),a("li",[a("p",[t._v("data: 主键这一行数据对应的地址值")])])]),t._v(" "),a("h4",{attrs:{id:"myisam非主键索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#myisam非主键索引"}},[t._v("#")]),t._v(" MyISAM非主键索引")]),t._v(" "),a("ul",[a("li",[t._v("key: 索引列的值")]),t._v(" "),a("li",[t._v("data: 索引列这一行数据对应的地址值")])]),t._v(" "),a("h3",{attrs:{id:"innodb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#innodb"}},[t._v("#")]),t._v(" InnoDB")]),t._v(" "),a("ul",[a("li",[t._v(".frm(表结构定义文件)")]),t._v(" "),a("li",[t._v(".ibd(数据和索引文件)")])]),t._v(" "),a("h4",{attrs:{id:"innodb主键索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#innodb主键索引"}},[t._v("#")]),t._v(" InnoDB主键索引")]),t._v(" "),a("p",[t._v("key: 主键值")]),t._v(" "),a("p",[t._v("data: 数据表的数据")]),t._v(" "),a("p",[t._v("在InnoDB的主键索引中，索引和数据是存储在一起的，也就是说索引的数据部分就是数据表的数据。")]),t._v(" "),a("blockquote",[a("p",[t._v("在InnoDB中，数据是依附于主键索引来存储的，如果没有主键，那么就不存在主键索引树，数据也没有办法存储。所以对InnoDB来说必须有一个主键，如果用户在创建表格时，没有设置主键，那么")])]),t._v(" "),a("h4",{attrs:{id:"innodb非主键索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#innodb非主键索引"}},[t._v("#")]),t._v(" InnoDB非主键索引")]),t._v(" "),a("p",[t._v("key: 索引列的值")]),t._v(" "),a("p",[t._v("data: 这行数据对应的主键值")]),t._v(" "),a("h4",{attrs:{id:"innodb索引示例图解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#innodb索引示例图解"}},[t._v("#")]),t._v(" InnoDB索引示例图解")]),t._v(" "),a("p",[t._v("对于以下这个表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("password_index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USING")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BTREE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("username_index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USING")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BTREE")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10063003")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("有几个索引树？ 画出这个索引树具体的存储结构")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'admin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'666666'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'520520'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'520666'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tomcat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'435566'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'allen'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'737366'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mary'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'454578'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'emma'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'884867'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("主键索引(id)")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(309),alt:"image-20230818212852678"}})]),t._v(" "),a("p",[a("strong",[t._v("非主键索引(username_index)")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(310),alt:"image-20230818215105580"}})]),t._v(" "),a("p",[a("strong",[t._v("非主键索引(password_index)")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(311),alt:"image-20230818214631151"}})]),t._v(" "),a("h2",{attrs:{id:"聚集索引和非聚集索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚集索引和非聚集索引"}},[t._v("#")]),t._v(" 聚集索引和非聚集索引")]),t._v(" "),a("h3",{attrs:{id:"聚集索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚集索引"}},[t._v("#")]),t._v(" 聚集索引")]),t._v(" "),a("p",[t._v("聚集索引的存储顺序和索引的顺序保持一致，在聚集索引中，叶子结点保存了每一行的数据。")]),t._v(" "),a("ol",[a("li",[t._v("如果这张表定义了主键索引，那么这个主键索引就作为聚集索引")]),t._v(" "),a("li",[t._v("如果这张表没有定义主键索引，那么该表的第一个唯一非空索引作为聚集索引")]),t._v(" "),a("li",[t._v("如果这张表也没有唯一非空索引，那么InnoDB内部会生成一个隐含的主键作为聚集索引，这个隐含的主键是一个6个字节的列，该列的值会随着数据的插入自增。")])]),t._v(" "),a("h3",{attrs:{id:"非聚集索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非聚集索引"}},[t._v("#")]),t._v(" 非聚集索引")]),t._v(" "),a("p",[t._v("叶子结点存储的是主键值，在根据非聚集索引查询的时候，需要先找到主键，然后回到聚集索引查询，这个过程就是所谓的回表。")]),t._v(" "),a("h3",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("聚集索引")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("非聚集索引")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("个数")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("一个表只能存在一个")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("一个表可以存在多个")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("索引值")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("必须唯一")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可以不唯一")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("物理存储顺序和索引（逻辑）顺序一致")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("索引（逻辑）顺序和物理存储顺序不一致")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("查询")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("一次就可以查找到需要查找的数据")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("需要"),a("strong",[t._v("回表")]),t._v("。第一次只能查找到记录对应的主键值，需要使用主键的值通过（回到）聚集索引查找需要查找的数据")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("速度")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("快")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("慢")])])])]),t._v(" "),a("h2",{attrs:{id:"聚集索引和主键索引的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚集索引和主键索引的关系"}},[t._v("#")]),t._v(" 聚集索引和主键索引的关系")]),t._v(" "),a("p",[t._v("主键索引一定是聚集索引，聚集索引不一定是主键索引。")]),t._v(" "),a("p",[t._v("在InnoDB中，在没有定义主键的情况下，")]),t._v(" "),a("h2",{attrs:{id:"索引的语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引的语法"}},[t._v("#")]),t._v(" 索引的语法")]),t._v(" "),a("p",[t._v("什么样的列适合当索引？")]),t._v(" "),a("ul",[a("li",[t._v("数据不重复出现的")]),t._v(" "),a("li",[t._v("值不为空的(null)")]),t._v(" "),a("li",[t._v("业务场景中查询条件比较多的")]),t._v(" "),a("li",[t._v("这一列值不经常变化的")])])])}),[],!1,null,null,null);a.default=e.exports}}]);